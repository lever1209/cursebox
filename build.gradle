plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	
	maven { url 'https://maven.terraformersmc.com/releases' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://jitpack.io' }
	
	flatDir {dirs 'libs'}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	// modImplementation name: "lambdynamiclights"
	modImplementation name: "darkness-fabric-modified"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"
	
	implementation "org.slf4j:slf4j-simple:${project.slf4j_simple_version}"
	implementation "com.electronwill.night-config:core:${project.night_core}"
	implementation "com.electronwill.night-config:toml:${project.night_toml}"
	
	include name: "darkness-fabric-modified"
	include "com.electronwill.night-config:core:${project.night_core}"
	include "com.electronwill.night-config:toml:${project.night_toml}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

task copyToMultiMC (type: Copy, dependsOn: remapJar) {
	from "build/libs/pandora-0.1.0.jar"
	into "@testingEnvironmentShortcut"
	println "Copied jar into Multimc testing directory"
}

task launchMultiMC (dependsOn: copyToMultiMC) {
	doLast{
		exec {
			workingDir '.'
			commandLine 'multimc', '--launch', '1.18.2'
		}
	println "Launched MultiMC"
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
